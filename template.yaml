AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  crazy-8s game backend service

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
    MemorySize: 128

Parameters:
  Environment:
    Type: String
    Default: prod
    AllowedValues:
      - prod
      - dev
  TableName:
    Type: String
    Default: "crazy_eights_games"
    Description: The name of the DynamoDB table to store Crazy 8's game state
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: "Required. Can be characters and underscore only. No numbers or special characters allowed."

Resources:
  Crazy8sFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: crazy-8s/
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableName

  Crazy8sWebsocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub Crazy8sWebsocket-${Environment}
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"

  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref Crazy8sWebsocket
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DefaultInteg

  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref Crazy8sWebsocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DefaultInteg

  DefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref Crazy8sWebsocket
      RouteKey: $default
      AuthorizationType: NONE
      OperationName: DefaultRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DefaultInteg

  DefaultInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref Crazy8sWebsocket
      Description: Default Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Crazy8sFunction.Arn}/invocations

  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
    - ConnectRoute
    - DefaultRoute
    - DisconnectRoute
    Properties:
      ApiId: !Ref Crazy8sWebsocket

  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: !Ref Environment
      Description: !Sub ${Environment} Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref Crazy8sWebsocket

  Crazy8sGamesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "gameId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "gameId"
          KeyType: "HASH"
      SSESpecification:
        SSEEnabled: True
      TableName: !Sub ${TableName}-${Environment}
  

Outputs:
  Crazy8sWebsocketAPI:
    Description: "Websocket API endpoint for crazy 8 service"
    Value: !Join [ '', [ 'wss://', !Ref Crazy8sWebsocket, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'Stage'] ]
  Crazy8sFunction:
    Description: "Crazy 8's Lambda Function ARN"
    Value: !GetAtt Crazy8sFunction.Arn
  Crazy8sFunctionIAMRole:
    Description: "Implicit IAM Role created for function"
    Value: !GetAtt Crazy8sFunctionRole.Arn
  Crazy8sGamesTableArn:
    Description: "Crazy 8's game DynamoDB table ARN"
    Value: !GetAtt Crazy8sGamesTable.Arn
